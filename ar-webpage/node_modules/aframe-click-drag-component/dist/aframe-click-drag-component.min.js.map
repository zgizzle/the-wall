{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","registerAframeClickDragComponent","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","createCommonjsModule","forceWorldUpdate","parent","updateMatrixWorld","forEachParent","attachedToParent","parentElement","someParent","cameraPositionToVec3","set","components","position","data","x","y","z","localToWorld","clientCoordsTo3DCanvasCoords","rayPlaneIntersection","dot","multiplyScalar","dragItem","c","clientX","clientY","v","screenCoordsToDirection","E","directionToWorldCoords","camera","T","_","b","m","copy","multiply","d","getWorldQuaternion","applyQuaternion","p","setFromQuaternion","h","Math","radToDeg","D","parentEl","sceneEl","object3D","worldToLocal","emit","DRAG_MOVE_EVENT","nextPosition","nextRotation","setAttribute","_slicedToArray","changedTouches","detail","name","index","oldData","newData","inverse","rotation","order","Quaternion","clone","Vector3","systems","activeCameraEl","document","addEventListener","removeEventListener","aframeDraggableComponent","arguments","COMPONENT_NAME","THREE","registerComponent","schema","init","didMount","update","remove","didUnmount","pause","play","Symbol","iterator","next","done","push","value","return","Array","isArray","Object","TypeError","_typeof","constructor","prototype","keys","shim","is_arguments","toString","hasOwnProperty","propertyIsEnumerable","supported","unsupported","slice","sort","Date","getTime","strict","DRAG_START_EVENT","DRAG_END_EVENT","TIME_TO_KEEP_LOG","_ref","Matrix4","unproject","applyProjection","getInverse","projectionMatrix","_ref2","innerWidth","innerHeight","sub","normalize","_ref4","getWorldDirection","add","_ref6","Plane","Raycaster","far","near","selectItem","from","querySelectorAll","map","intersectObjects","filter","object","el","visible","point","setFromNormalAndCoplanarPoint","negate","constant","getWorldPosition","depth","offset","element","_ref10","performance","now","time","shift","assign","velocity","querySelector","hasLoaded","indexOf","splice"],"mappings":"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","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar keys = createCommonjsModule(function (module, exports) {\nexports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n});\n\nvar is_arguments = createCommonjsModule(function (module, exports) {\nvar supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n}\n});\n\nvar index = createCommonjsModule(function (module) {\nvar pSlice = Array.prototype.slice;\nvar objectKeys = keys;\nvar isArguments = is_arguments;\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n};\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n});\n\nconst COMPONENT_NAME = 'click-drag';\nconst DRAG_START_EVENT = 'dragstart';\nconst DRAG_MOVE_EVENT = 'dragmove';\nconst DRAG_END_EVENT = 'dragend';\n\nconst TIME_TO_KEEP_LOG = 100;\n\nfunction forceWorldUpdate(threeElement) {\n\n  let element = threeElement;\n  while (element.parent) {\n    element = element.parent;\n  }\n\n  element.updateMatrixWorld(true);\n}\n\nfunction forEachParent(element, lambda) {\n  while (element.attachedToParent) {\n    element = element.parentElement;\n    lambda(element);\n  }\n}\n\nfunction someParent(element, lambda) {\n  while (element.attachedToParent) {\n    element = element.parentElement;\n    if (lambda(element)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction cameraPositionToVec3(camera, vec3) {\n\n  vec3.set(\n    camera.components.position.data.x,\n    camera.components.position.data.y,\n    camera.components.position.data.z\n  );\n\n  forEachParent(camera, element => {\n\n    if (element.components && element.components.position) {\n      vec3.set(\n        vec3.x + element.components.position.data.x,\n        vec3.y + element.components.position.data.y,\n        vec3.z + element.components.position.data.z\n      );\n    }\n\n  });\n\n}\n\nfunction localToWorld(THREE, threeCamera, vector) {\n  forceWorldUpdate(threeCamera);\n  return threeCamera.localToWorld(vector);\n}\n\nconst {unproject} = (function unprojectFunction() {\n\n  let initialized = false;\n\n  let matrix;\n\n  function initialize(THREE) {\n    matrix = new THREE.Matrix4();\n\n    return true;\n  }\n\n  return {\n\n    unproject(THREE, vector, camera) {\n\n      const threeCamera = camera.components.camera.camera;\n\n      initialized = initialized || initialize(THREE);\n\n      vector.applyProjection(matrix.getInverse(threeCamera.projectionMatrix));\n\n      return localToWorld(THREE, threeCamera, vector);\n\n    },\n  };\n}());\n\nfunction clientCoordsTo3DCanvasCoords(\n  clientX,\n  clientY,\n  offsetX,\n  offsetY,\n  clientWidth,\n  clientHeight\n) {\n  return {\n    x: (((clientX - offsetX) / clientWidth) * 2) - 1,\n    y: (-((clientY - offsetY) / clientHeight) * 2) + 1,\n  };\n}\n\nconst {screenCoordsToDirection} = (function screenCoordsToDirectionFunction() {\n\n  let initialized = false;\n\n  let mousePosAsVec3;\n  let cameraPosAsVec3;\n\n  function initialize(THREE) {\n    mousePosAsVec3 = new THREE.Vector3();\n    cameraPosAsVec3 = new THREE.Vector3();\n\n    return true;\n  }\n\n  return {\n    screenCoordsToDirection(\n      THREE,\n      aframeCamera,\n      {x: clientX, y: clientY}\n    ) {\n\n      initialized = initialized || initialize(THREE);\n\n      // scale mouse coordinates down to -1 <-> +1\n      const {x: mouseX, y: mouseY} = clientCoordsTo3DCanvasCoords(\n        clientX, clientY,\n        0, 0, // TODO: Replace with canvas position\n        window.innerWidth,\n        window.innerHeight\n      );\n\n      mousePosAsVec3.set(mouseX, mouseY, -1);\n\n      // apply camera transformation from near-plane of mouse x/y into 3d space\n      // NOTE: This should be replaced with THREE code directly once the aframe bug\n      // is fixed:\n/*\n      cameraPositionToVec3(aframeCamera, cameraPosAsVec3);\n      const {x, y, z} = new THREE\n       .Vector3(mouseX, mouseY, -1)\n       .unproject(aframeCamera.components.camera.camera)\n       .sub(cameraPosAsVec3)\n       .normalize();\n*/\n      const projectedVector = unproject(THREE, mousePosAsVec3, aframeCamera);\n\n      cameraPositionToVec3(aframeCamera, cameraPosAsVec3);\n\n      // Get the unit length direction vector from the camera's position\n      const {x, y, z} = projectedVector.sub(cameraPosAsVec3).normalize();\n      return {x, y, z};\n    },\n  };\n}());\n\n/**\n * @param planeNormal {THREE.Vector3}\n * @param planeConstant {Float} Distance from origin of the plane\n * @param rayDirection {THREE.Vector3} Direction of ray from the origin\n *\n * @return {THREE.Vector3} The intersection point of the ray and plane\n */\nfunction rayPlaneIntersection(planeNormal, planeConstant, rayDirection) {\n  // A line from the camera position toward (and through) the plane\n  const distanceToPlane = planeConstant / planeNormal.dot(rayDirection);\n  return rayDirection.multiplyScalar(distanceToPlane);\n}\n\nconst {directionToWorldCoords} = (function directionToWorldCoordsFunction() {\n\n  let initialized = false;\n\n  let direction;\n  let cameraPosAsVec3;\n\n  function initialize(THREE) {\n    direction = new THREE.Vector3();\n    cameraPosAsVec3 = new THREE.Vector3();\n\n    return true;\n  }\n\n  return {\n    /**\n     * @param camera Three.js Camera instance\n     * @param Object Position of the camera\n     * @param Object position of the mouse (scaled to be between -1 to 1)\n     * @param depth Depth into the screen to calculate world coordinates for\n     */\n    directionToWorldCoords(\n      THREE,\n      aframeCamera,\n      camera,\n      {x: directionX, y: directionY, z: directionZ},\n      depth\n    ) {\n\n      initialized = initialized || initialize(THREE);\n\n      cameraPositionToVec3(aframeCamera, cameraPosAsVec3);\n      direction.set(directionX, directionY, directionZ);\n\n      // A line from the camera position toward (and through) the plane\n      const newPosition = rayPlaneIntersection(\n        camera.getWorldDirection(),\n        depth,\n        direction\n      );\n\n      // Reposition back to the camera position\n      const {x, y, z} = newPosition.add(cameraPosAsVec3);\n\n      return {x, y, z};\n\n    },\n  };\n}());\n\nconst {selectItem} = (function selectItemFunction() {\n\n  let initialized = false;\n\n  let cameraPosAsVec3;\n  let directionAsVec3;\n  let raycaster;\n  let plane;\n\n  function initialize(THREE) {\n    plane = new THREE.Plane();\n    cameraPosAsVec3 = new THREE.Vector3();\n    directionAsVec3 = new THREE.Vector3();\n    raycaster = new THREE.Raycaster();\n\n    // TODO: From camera values?\n    raycaster.far = Infinity;\n    raycaster.near = 0;\n\n    return true;\n  }\n\n  return {\n    selectItem(THREE, selector, camera, clientX, clientY) {\n\n      initialized = initialized || initialize(THREE);\n\n      const {x: directionX, y: directionY, z: directionZ} = screenCoordsToDirection(\n        THREE,\n        camera,\n        {x: clientX, y: clientY}\n      );\n\n      cameraPositionToVec3(camera, cameraPosAsVec3);\n      directionAsVec3.set(directionX, directionY, directionZ);\n\n      raycaster.set(cameraPosAsVec3, directionAsVec3);\n\n      // Push meshes onto list of objects to intersect.\n      // TODO: Can we do this at some other point instead of every time a ray is\n      // cast? Is that a micro optimization?\n      const objects = Array.from(\n        camera.sceneEl.querySelectorAll(`[${selector}]`)\n      ).map(object => object.object3D);\n\n      const recursive = true;\n\n      const intersected = raycaster\n        .intersectObjects(objects, recursive)\n        // Only keep intersections against objects that have a reference to an entity.\n        .filter(intersection => !!intersection.object.el)\n        // Only keep ones that are visible\n        .filter(intersection => intersection.object.parent.visible)\n        // The first element is the closest\n        [0]; // eslint-disable-line no-unexpected-multiline\n\n      if (!intersected) {\n        return {};\n      }\n\n      const {point, object} = intersected;\n\n      // Aligned to the world direction of the camera\n      // At the specified intersection point\n      plane.setFromNormalAndCoplanarPoint(\n        camera.components.camera.camera.getWorldDirection().clone().negate(),\n        point.clone().sub(cameraPosAsVec3)\n      );\n\n      const depth = plane.constant;\n\n      const offset = point.sub(object.getWorldPosition());\n\n      return {depth, offset, element: object.el};\n\n    },\n  };\n}());\n\nfunction dragItem(THREE, element, offset, camera, depth, mouseInfo) {\n\n  const threeCamera = camera.components.camera.camera;\n\n  // Setting up for rotation calculations\n  const startCameraRotationInverse = threeCamera.getWorldQuaternion().inverse();\n  const startElementRotation = element.object3D.getWorldQuaternion();\n  const elementRotationOrder = element.object3D.rotation.order;\n\n  const rotationQuaternion = new THREE.Quaternion();\n  const rotationEuler = element.object3D.rotation.clone();\n\n  const offsetVector = new THREE.Vector3(offset.x, offset.y, offset.z);\n  let lastMouseInfo = mouseInfo;\n\n  const nextRotation = {\n    x: THREE.Math.radToDeg(rotationEuler.x),\n    y: THREE.Math.radToDeg(rotationEuler.y),\n    z: THREE.Math.radToDeg(rotationEuler.z),\n  };\n\n  const activeCamera = element.sceneEl.systems.camera.activeCameraEl;\n\n  const isChildOfActiveCamera = someParent(element, parent => parent === activeCamera);\n\n  function onMouseMove({clientX, clientY}) {\n\n    lastMouseInfo = {clientX, clientY};\n\n    const direction = screenCoordsToDirection(\n      THREE,\n      camera,\n      {x: clientX, y: clientY}\n    );\n\n    const {x, y, z} = directionToWorldCoords(\n      THREE,\n      camera,\n      camera.components.camera.camera,\n      direction,\n      depth\n    );\n\n\n    let rotationDiff;\n\n    // Start by rotating backwards from the initial camera rotation\n    rotationDiff = rotationQuaternion.copy(startCameraRotationInverse);\n\n    // rotate the offset\n    offsetVector.set(offset.x, offset.y, offset.z);\n\n    // Then add the current camera rotation\n    rotationDiff = rotationQuaternion.multiply(threeCamera.getWorldQuaternion());\n\n    offsetVector.applyQuaternion(rotationDiff);\n\n    if (!isChildOfActiveCamera) {\n      // And correctly offset rotation\n      rotationDiff.multiply(startElementRotation);\n\n      rotationEuler.setFromQuaternion(rotationDiff, elementRotationOrder);\n    }\n\n    nextRotation.x = THREE.Math.radToDeg(rotationEuler.x);\n    nextRotation.y = THREE.Math.radToDeg(rotationEuler.y);\n    nextRotation.z = THREE.Math.radToDeg(rotationEuler.z);\n\n    const nextPosition = {x: x - offsetVector.x, y: y - offsetVector.y, z: z - offsetVector.z};\n\n    // When the element has parents, we need to convert its new world position\n    // into new local position of its parent element\n    if (element.parentEl !== element.sceneEl) {\n\n      // The new world position\n      offsetVector.set(nextPosition.x, nextPosition.y, nextPosition.z);\n\n      // Converted\n      element.parentEl.object3D.worldToLocal(offsetVector);\n\n      nextPosition.x = offsetVector.x;\n      nextPosition.y = offsetVector.y;\n      nextPosition.z = offsetVector.z;\n    }\n\n    element.emit(DRAG_MOVE_EVENT, {nextPosition, nextRotation, clientX, clientY});\n\n    element.setAttribute('position', nextPosition);\n\n    element.setAttribute('rotation', nextRotation);\n  }\n\n  function onTouchMove({changedTouches: [touchInfo]}) {\n    onMouseMove(touchInfo);\n  }\n\n  function onCameraChange({detail}) {\n    if (\n      (detail.name === 'position' || detail.name === 'rotation')\n      && !index(detail.oldData, detail.newData)\n    ) {\n      onMouseMove(lastMouseInfo);\n    }\n  }\n\n  document.addEventListener('mousemove', onMouseMove);\n  document.addEventListener('touchmove', onTouchMove);\n  camera.addEventListener('componentchanged', onCameraChange);\n\n  // The \"unlisten\" function\n  return _ => {\n    document.removeEventListener('mousemove', onMouseMove);\n    document.removeEventListener('touchmove', onTouchMove);\n    camera.removeEventListener('componentchanged', onCameraChange);\n  };\n}\n\n// Closure to close over the removal of the event listeners\nconst {didMount, didUnmount} = (function getDidMountAndUnmount() {\n\n  let removeClickListeners;\n  let removeDragListeners;\n  const cache = [];\n\n  function initialize(THREE, componentName) {\n\n    // TODO: Based on a scene from the element passed in?\n    const scene = document.querySelector('a-scene');\n    // delay loading of this as we're not 100% if the scene has loaded yet or not\n    let camera;\n    let draggedElement;\n    let dragInfo;\n    const positionLog = [];\n\n    function cleanUpPositionLog() {\n      const now = performance.now();\n      while (positionLog.length && now - positionLog[0].time > TIME_TO_KEEP_LOG) {\n        // remove the first element;\n        positionLog.shift();\n      }\n    }\n\n    function onDragged({detail: {nextPosition}}) {\n      // Continuously clean up so we don't get huge logs built up\n      cleanUpPositionLog();\n      positionLog.push({\n        position: Object.assign({}, nextPosition),\n        time: performance.now(),\n      });\n    }\n\n    function onMouseDown({clientX, clientY}) {\n\n      const {depth, offset, element} = selectItem(THREE, componentName, camera, clientX, clientY);\n\n      if (element) {\n        // Can only drag one item at a time, so no need to check if any\n        // listener is already set up\n        let removeDragItemListeners = dragItem(\n          THREE,\n          element,\n          offset,\n          camera,\n          depth,\n          {\n            clientX,\n            clientY,\n          }\n        );\n\n        draggedElement = element;\n\n        dragInfo = {\n          offset: {x: offset.x, y: offset.y, z: offset.z},\n          depth,\n          clientX,\n          clientY,\n        };\n\n        element.addEventListener(DRAG_MOVE_EVENT, onDragged);\n\n        removeDragListeners = _ => {\n          element.removeEventListener(DRAG_MOVE_EVENT, onDragged);\n          // eslint-disable-next-line no-unused-expressions\n          removeDragItemListeners && removeDragItemListeners();\n          // in case this removal function gets called more than once\n          removeDragItemListeners = null;\n        };\n\n        element.emit(DRAG_START_EVENT, dragInfo);\n      }\n    }\n\n    function calculateVelocity() {\n\n      if (positionLog.length < 2) {\n        return 0;\n      }\n\n      const start = positionLog[positionLog.length - 1];\n      const end = positionLog[0];\n\n      const deltaTime = 1000 / (start.time - end.time);\n      return {\n        x: (start.position.x - end.position.x) * deltaTime, // m/s\n        y: (start.position.y - end.position.y) * deltaTime, // m/s\n        z: (start.position.z - end.position.z) * deltaTime, // m/s\n      };\n    }\n\n    function onMouseUp({clientX, clientY}) {\n\n      if (!draggedElement) {\n        return;\n      }\n\n      cleanUpPositionLog();\n\n      const velocity = calculateVelocity();\n\n      draggedElement.emit(\n        DRAG_END_EVENT,\n        Object.assign({}, dragInfo, {clientX, clientY, velocity})\n      );\n\n      removeDragListeners && removeDragListeners(); // eslint-disable-line no-unused-expressions\n      removeDragListeners = undefined;\n    }\n\n    function onTouchStart({changedTouches: [touchInfo]}) {\n      onMouseDown(touchInfo);\n    }\n\n    function onTouchEnd({changedTouches: [touchInfo]}) {\n      onMouseUp(touchInfo);\n    }\n\n    function run() {\n\n      camera = scene.camera.el;\n\n      // TODO: Attach to canvas?\n      document.addEventListener('mousedown', onMouseDown);\n      document.addEventListener('mouseup', onMouseUp);\n\n      document.addEventListener('touchstart', onTouchStart);\n      document.addEventListener('touchend', onTouchEnd);\n\n      removeClickListeners = _ => {\n        document.removeEventListener('mousedown', onMouseDown);\n        document.removeEventListener('mouseup', onMouseUp);\n\n        document.removeEventListener('touchstart', onTouchStart);\n        document.removeEventListener('touchend', onTouchEnd);\n      };\n\n    }\n\n    if (scene.hasLoaded) {\n      run();\n    } else {\n      scene.addEventListener('loaded', run);\n    }\n\n  }\n\n  function tearDown() {\n    removeClickListeners && removeClickListeners(); // eslint-disable-line no-unused-expressions\n    removeClickListeners = undefined;\n  }\n\n  return {\n    didMount(element, THREE, componentName) {\n\n      if (cache.length === 0) {\n        initialize(THREE, componentName);\n      }\n\n      if (cache.indexOf(element) === -1) {\n        cache.push(element);\n      }\n    },\n\n    didUnmount(element) {\n\n      const cacheIndex = cache.indexOf(element);\n\n      removeDragListeners && removeDragListeners(); // eslint-disable-line no-unused-expressions\n      removeDragListeners = undefined;\n\n      if (cacheIndex === -1) {\n        return;\n      }\n\n      // remove that element\n      cache.splice(cacheIndex, 1);\n\n      if (cache.length === 0) {\n        tearDown();\n      }\n\n    },\n  };\n}());\n\n/**\n * @param aframe {Object} The Aframe instance to register with\n * @param componentName {String} The component name to use. Default: 'click-drag'\n */\nfunction aframeDraggableComponent(aframe, componentName = COMPONENT_NAME) {\n\n  const THREE = aframe.THREE;\n\n  /**\n   * Draggable component for A-Frame.\n   */\n  aframe.registerComponent(componentName, {\n    schema: {},\n\n    /**\n     * Called once when component is attached. Generally for initial setup.\n     */\n    init() {\n      didMount(this, THREE, componentName);\n    },\n\n    /**\n     * Called when component is attached and when component data changes.\n     * Generally modifies the entity based on the data.\n     *\n     * @param oldData\n     */\n    update() { },\n\n    /**\n     * Called when a component is removed (e.g., via removeAttribute).\n     * Generally undoes all modifications to the entity.\n     */\n    remove() {\n      didUnmount(this);\n    },\n\n    /**\n     * Called when entity pauses.\n     * Use to stop or remove any dynamic or background behavior such as events.\n     */\n    pause() {\n      didUnmount(this);\n    },\n\n    /**\n     * Called when entity resumes.\n     * Use to continue or add any dynamic or background behavior such as events.\n     */\n    play() {\n      didMount(this, THREE, componentName);\n    },\n  });\n}\n\nmodule.exports = aframeDraggableComponent;\n"]}